<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <groupId>com.ruomm.springcloud</groupId>
    <artifactId>ruomm-springcloud-parent</artifactId>
    <packaging>pom</packaging>
	<version>1.0.0</version>
	<modules>
		<module>auth</module>
	</modules>
	<properties>
		<java.version>17</java.version>
		<maven.compiler.source>17</maven.compiler.source>
		<maven.compiler.target>17</maven.compiler.target>
		<project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
		<ruommjavax.version>3.0.0</ruommjavax.version>
		<com.alibaba.fastjson.version>2.0.10</com.alibaba.fastjson.version>
	</properties>
	<dependencyManagement>
		<dependencies>
			<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-dependencies -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-dependencies</artifactId>
				<version>3.2.2</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.springframework.cloud/spring-cloud-dependencies -->
			<dependency>
				<groupId>org.springframework.cloud</groupId>
				<artifactId>spring-cloud-dependencies</artifactId>
				<version>2023.0.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.projectlombok/lombok-maven-plugin -->
			<dependency>
				<groupId>org.projectlombok</groupId>
				<artifactId>lombok-maven-plugin</artifactId>
				<version>1.18.20.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.alibaba/fastjson -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>fastjson</artifactId>
				<version>${com.alibaba.fastjson.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- 牛牛通用Jar包开始 -->
			<dependency>
				<groupId>com.ruomm.javax</groupId>
				<artifactId>javax_basex</artifactId>
				<version>${ruommjavax.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.ruomm.javax</groupId>
				<artifactId>javax_httpx</artifactId>
				<version>${ruommjavax.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.ruomm.javax</groupId>
				<artifactId>javax_jsonx</artifactId>
				<version>${ruommjavax.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.ruomm.javax</groupId>
				<artifactId>javax_encryptx_bc15</artifactId>
				<version>${ruommjavax.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.ruomm.javax</groupId>
				<artifactId>javax_objvalidatorx</artifactId>
				<version>${ruommjavax.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.ruomm.javax</groupId>
				<artifactId>javax_propertiesx</artifactId>
				<version>${ruommjavax.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.ruomm.webx</groupId>
				<artifactId>webx_requestwrapperx</artifactId>
				<version>${ruommjavax.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.ruomm.webx</groupId>
				<artifactId>webx_springservletx</artifactId>
				<version>${ruommjavax.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<dependency>
				<groupId>com.ruomm.webx</groupId>
				<artifactId>webx_validatorx</artifactId>
				<version>${ruommjavax.version}</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- 牛牛通用Jar包结束 -->
			<!-- mybatis集成 -->
			<!-- https://mvnrepository.com/artifact/org.mybatis.spring.boot/mybatis-spring-boot-starter -->
			<dependency>
				<groupId>org.mybatis.spring.boot</groupId>
				<artifactId>mybatis-spring-boot-starter</artifactId>
				<version>3.0.3</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!--通用Mapper集成-->
			<!-- https://mvnrepository.com/artifact/tk.mybatis/mapper-spring-boot-starter -->
			<dependency>
				<groupId>tk.mybatis</groupId>
				<artifactId>mapper-spring-boot-starter</artifactId>
				<version>4.2.3</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!--druid数据源-->
			<!-- https://mvnrepository.com/artifact/com.alibaba/druid-spring-boot-starter -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid-spring-boot-starter</artifactId>
				<version>1.2.21</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/com.alibaba/druid -->
			<dependency>
				<groupId>com.alibaba</groupId>
				<artifactId>druid</artifactId>
				<version>1.2.21</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!--MySql数据库驱动-->
			<!-- https://mvnrepository.com/artifact/mysql/mysql-connector-java -->
			<dependency>
				<groupId>com.mysql</groupId>
				<artifactId>mysql-connector-j</artifactId>
				<version>8.3.0</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!--hibernate集成，自动建表适用于单数据源，动态数据源不建议使用-->
			<!-- https://mvnrepository.com/artifact/org.springframework.boot/spring-boot-starter-data-jpa -->
			<dependency>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-starter-data-jpa</artifactId>
				<version>3.2.2</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.hibernate.validator/hibernate-validator -->
			<dependency>
				<groupId>org.hibernate.validator</groupId>
				<artifactId>hibernate-validator</artifactId>
				<version>8.0.1.Final</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
			<!-- https://mvnrepository.com/artifact/org.hibernate/hibernate-core -->
			<dependency>
				<groupId>org.hibernate</groupId>
				<artifactId>hibernate-core</artifactId>
				<version>6.4.1.Final</version>
				<type>pom</type>
				<scope>import</scope>
			</dependency>
		</dependencies>
	</dependencyManagement>

	<profiles>
		<profile>
			<!-- 本地开发环境 -->
			<id>dev</id>
			<properties>
				<profiles.active>dev</profiles.active>
				<filecmdx.destdir>EMPTY</filecmdx.destdir>
				<filecmdx.disable>true</filecmdx.disable>
				<filecmdx.exec>false</filecmdx.exec>
				<mbscode>norun</mbscode>
			</properties>
			<activation>
				<!-- 设置默认激活这个配置 -->
				<activeByDefault>true</activeByDefault>
			</activation>
		</profile>
	</profiles>

    <build>
        <plugins>
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-resources-plugin</artifactId>
				<version>3.3.1</version>
				<configuration>
					<!-- 指定过滤的表达式
                    <delimit>@</delimit> : 表示 过滤开头为 @ 结束为 @ 的内容，例如 @project.version@
                    <delimit>${*}</delimit> 表示 过滤${}包裹的内容，例如 ${project.vserion}
                 -->
					<delimiters>@</delimiters>
					<useDefaultDelimiters>false</useDefaultDelimiters>
				</configuration>
			</plugin>
			<plugin>
				<groupId>org.springframework.boot</groupId>
				<artifactId>spring-boot-maven-plugin</artifactId>
				<version>3.2.2</version>
				<executions>
					<execution>
						<goals>
							<goal>build-info</goal>
							<goal>repackage</goal>
						</goals>
					</execution>
				</executions>
			</plugin>
			<!-- 设置编译版本为21 -->
			<plugin>
				<groupId>org.apache.maven.plugins</groupId>
				<artifactId>maven-compiler-plugin</artifactId>
				<version>3.12.1</version>
				<configuration>
					<!-- The -source argument for the Java compiler. -->
					<source>17</source>
					<!-- The -target argument for the Java compiler. -->
					<target>17</target>
					<!-- the -release argument for the Java compiler, supported since Java9 -->
					<release>17</release>
					<!-- The -encoding argument for the Java compiler. -->
					<encoding>UTF-8</encoding>
					<!--parameters 或compilerArgs必须设置，若不设置请求时候PathVariable会抛出如下异常：
					Name for argument of type [java.lang.String] not specified, and parameter name information not available via reflection. Ensure that the compiler uses the '-parameters' flag.-->
					<!-- The source directories containing the sources to be compiled. -->
					<parameters>true</parameters>
					<!--<compilerArgs>
						<arg>-XDignore.symbol.file</arg>
					</compilerArgs>-->
				</configuration>
			</plugin>
        </plugins>
		<resources>
			<resource>
				<directory>src/main/resources</directory>
				<!--开启过滤，用指定的参数替换directory下的文件中的参数-->
				<filtering>true</filtering>
			</resource>
		</resources>
    </build>


</project>